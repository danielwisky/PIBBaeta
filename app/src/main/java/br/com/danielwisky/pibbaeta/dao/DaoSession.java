package br.com.danielwisky.pibbaeta.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import br.com.danielwisky.pibbaeta.dao.PedidoOracao;
import br.com.danielwisky.pibbaeta.dao.Programacao;
import br.com.danielwisky.pibbaeta.dao.TipoProgramacao;

import br.com.danielwisky.pibbaeta.dao.PedidoOracaoDao;
import br.com.danielwisky.pibbaeta.dao.ProgramacaoDao;
import br.com.danielwisky.pibbaeta.dao.TipoProgramacaoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig pedidoOracaoDaoConfig;
    private final DaoConfig programacaoDaoConfig;
    private final DaoConfig tipoProgramacaoDaoConfig;

    private final PedidoOracaoDao pedidoOracaoDao;
    private final ProgramacaoDao programacaoDao;
    private final TipoProgramacaoDao tipoProgramacaoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        pedidoOracaoDaoConfig = daoConfigMap.get(PedidoOracaoDao.class).clone();
        pedidoOracaoDaoConfig.initIdentityScope(type);

        programacaoDaoConfig = daoConfigMap.get(ProgramacaoDao.class).clone();
        programacaoDaoConfig.initIdentityScope(type);

        tipoProgramacaoDaoConfig = daoConfigMap.get(TipoProgramacaoDao.class).clone();
        tipoProgramacaoDaoConfig.initIdentityScope(type);

        pedidoOracaoDao = new PedidoOracaoDao(pedidoOracaoDaoConfig, this);
        programacaoDao = new ProgramacaoDao(programacaoDaoConfig, this);
        tipoProgramacaoDao = new TipoProgramacaoDao(tipoProgramacaoDaoConfig, this);

        registerDao(PedidoOracao.class, pedidoOracaoDao);
        registerDao(Programacao.class, programacaoDao);
        registerDao(TipoProgramacao.class, tipoProgramacaoDao);
    }
    
    public void clear() {
        pedidoOracaoDaoConfig.clearIdentityScope();
        programacaoDaoConfig.clearIdentityScope();
        tipoProgramacaoDaoConfig.clearIdentityScope();
    }

    public PedidoOracaoDao getPedidoOracaoDao() {
        return pedidoOracaoDao;
    }

    public ProgramacaoDao getProgramacaoDao() {
        return programacaoDao;
    }

    public TipoProgramacaoDao getTipoProgramacaoDao() {
        return tipoProgramacaoDao;
    }

}
